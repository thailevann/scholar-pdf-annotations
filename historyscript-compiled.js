(function(){/*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/
var e=this||self;var f,h;a:{for(var l=["CLOSURE_FLAGS"],m=e,n=0;n<l.length;n++)if(m=m[l[n]],m==null){h=null;break a}h=m}var p=h&&h[610401301];f=p!=null?p:!1;var q;const r=e.navigator;q=r?r.userAgentData||null:null;function t(a){return f?q?q.brands.some(({brand:b})=>b&&b.indexOf(a)!=-1):!1:!1}function u(a){var b;a:{if(b=e.navigator)if(b=b.userAgent)break a;b=""}return b.indexOf(a)!=-1};function v(){return f?!!q&&q.brands.length>0:!1}function w(){return v()?t("Chromium"):(u("Chrome")||u("CriOS"))&&!(v()?0:u("Edge"))||u("Silk")};!u("Android")||w();w();u("Safari")&&(w()||(v()?0:u("Coast"))||(v()?0:u("Opera"))||(v()?0:u("Edge"))||(v()?t("Microsoft Edge"):u("Edg/"))||v()&&t("Opera"));var x;x=typeof Symbol==="function"&&typeof Symbol()==="symbol"?Symbol.for?Symbol.for("jas"):Symbol("jas"):void 0;const y=typeof Symbol==="function"&&typeof Symbol()==="symbol"?x:"h",z=Object.getOwnPropertyDescriptor(Array.prototype,"g");
Object.defineProperties(Array.prototype,{g:{get(){function a(k,g){k&b&&d.push(g)}const b=this[y]|0,d=[];a(1,"IS_REPEATED_FIELD");a(2,"IS_IMMUTABLE_ARRAY");a(4,"IS_API_FORMATTED");a(2048,"STRING_FORMATTED");a(4096,"GBIGINT_FORMATTED");a(4096,"BINARY");a(8,"ONLY_MUTABLE_VALUES");a(32,"MUTABLE_REFERENCES_ARE_OWNED");a(64,"CONSTRUCTED");a(128,"TRANSFERRED");a(256,"HAS_SPARSE_OBJECT");a(512,"HAS_MESSAGE_ID");a(1024,"FROZEN_ARRAY");a(8192,"DESERIALIZED_FROM_BINARY");var c=b>>14&1023||536870912;c!==536870912&&
d.push(`pivot: ${c}`);c=d.join(",");return z?z.get.call(this)+"|"+c:c},configurable:!0,enumerable:!1}});typeof Proxy!=="undefined"&&new Proxy({},{getPrototypeOf:A,setPrototypeOf:A,isExtensible:A,preventExtensions:A,getOwnPropertyDescriptor:A,defineProperty:A,has:A,get:A,set:A,deleteProperty:A,apply:A,construct:A});function A(){throw Error("this array or object is owned by JSPB and should not be reused, did you mean to copy it with copyJspbArray? See go/jspb-api-gotchas#construct_from_array");};function B(){};(function(){const a=e.jspbGetTypeName;e.jspbGetTypeName=a?b=>a(b)||void 0:B})();function C(){var a=window.location.hash;return new URLSearchParams(a[0]==="#"?a.substr(1):"")};function D(a){a=Number(a);return!a||a<0?"":a.toFixed(2)}function E(a){a=String(a);const b=a.split(",").map(Number);return b.length===1&&b[0]>0||b.length===3&&b[0]>0&&!isNaN(b[1])&&!isNaN(b[2])?a:""}function G(a){return a!=="0"&&a!=="1"?"":a}
function H(a,b){if(a){var d=(history.state||{}).fractionalStartPage,c=null,k=null,g=null,F=null;d?b&&(c=(history.state||{}).navpanes,g=(history.state||{}).zoom):(b=C(),d=D(b.get("page"))||"1",c=G(b.get("navpanes")),k=b.get("view"),g=E(b.get("zoom")),F=b.get("nameddest"));a.postMessage({type:"restoreReadingProgress",fractionalStartPage:d,navpanes:c,view:k,zoom:g,nameddest:F},"*")}}function I(){return(new URLSearchParams(window.location.hash.substring(1))).get("gsr")==="0"}
function J(){let a;window.addEventListener("popstate",()=>{I()||a&&H(a,!1)});window.addEventListener("message",b=>{if(b.origin==="chrome-extension://"+chrome.runtime.id&&b.data&&typeof b.data==="object"&&!I())if(a=b.source,b.data.type==="ready")H(a,!0);else if(b.data.type==="pushState"){var d=D(b.data.fractionalStartPage),c=E(b.data.zoom);const k=G(b.data.navpanes);if(d||c||k){b=Number(d);const g=C();g.set("page",b.toFixed(2));history.pushState({fractionalStartPage:d,navpanes:k,zoom:c},"","#"+g.toString())}else console.log("fractionalStartPage, zoomPct, or navpanes required")}else b.data.type===
"replaceState"&&(d=D(b.data.fractionalStartPage),c=E(b.data.zoom),b=G(b.data.navpanes),d||c||b?history.replaceState({fractionalStartPage:d,navpanes:b,zoom:c},""):console.log("fractionalStartPage, zoomPct, or navpanes required"))})};function K(){var a=history.state;if(a===null)return!0;if(typeof a!=="object")return!1;a=Object.keys(a);const b=["fractionalStartPage","navpanes","zoom"],d=a.filter(c=>b.includes(c));return a.length===d.length}window.gsrHistoryTopWindow===void 0&&(window.gsrHistoryTopWindow=K())&&J(); return window.gsrHistoryTopWindow;})();
